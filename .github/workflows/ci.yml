name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security_scan:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Vérifier le code source (checkout)
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2: Construire l'image Docker
      - name: Build Docker image
        run: |
          docker build -t my-app .  # Construire l'image Docker

      # Étape 3: Scanner l'image Docker avec Trivy
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "my-app"
          format: 'table'  # Rapport lisible dans les logs

      # Étape 4: Scanner le Dockerfile avec Snyk et sortir un rapport JSON
      - name: Scan Dockerfile with Snyk
        uses: snyk/actions/docker@master
        with:
          image: my-app
          args: --file=Dockerfile --json  # Spécifie le fichier Dockerfile + format JSON
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Étape 5: Détecter les secrets avec GitLeaks
      - name: Install GitLeaks
        run: |
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.10.1/gitleaks-linux-amd64
          chmod +x gitleaks-linux-amd64
          sudo mv gitleaks-linux-amd64 /usr/local/bin/gitleaks
          gitleaks --version

      - name: Run GitLeaks to detect secrets
        run: |
          gitleaks detect --source=./ --verbose

      # Étape 6: Nettoyer l'image Docker
      - name: Clean up Docker image
        run: |
          docker rmi my-app
